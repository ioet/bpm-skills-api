buildscript {
    ext {
        springBootVersion = '2.0.5.RELEASE'
    }
    repositories {
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

apply plugin: 'java'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'jacoco'
jacoco {
    toolVersion = '0.8.1'
}

group = 'com.ioet'
version = '0.0.1'
sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

ext {
    springCloudVersion = 'Finchley.SR1'
}

dependencies {
    compile 'com.github.derjust:spring-data-dynamodb:5.0.3'
    compile('org.springframework.boot:spring-boot-starter-web')
    runtime('org.springframework.boot:spring-boot-devtools')
    compileOnly('org.projectlombok:lombok')
    testCompile('org.springframework.boot:spring-boot-starter-test')
    compile 'io.springfox:springfox-swagger2:2.9.2'
    compile 'io.springfox:springfox-swagger-ui:2.9.2'
    compile 'com.amazonaws:aws-lambda-java-core:1.1.0'
    compile 'com.amazonaws:aws-lambda-java-events:1.1.0'
    compile group: 'com.amazonaws.serverless', name: 'aws-serverless-java-container-core', version: '1.3'
    compile group: 'com.amazonaws.serverless', name: 'aws-serverless-java-container-spring', version: '1.3'
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

jacocoTestReport {
    reports {
        xml.enabled = true
        html.enabled = true
    }
    afterEvaluate {
        classDirectories = files(classDirectories.files.collect {
            fileTree(dir: it, exclude: ['**/config/**', '**/BpmPeopleTimeApiApplication.class', '**/aws/**'])
        })
    }
}

check.dependsOn jacocoTestReport

task buildZip(type: Zip) {
    from compileJava
    from processResources
    into('lib'){
        from configurations.runtime
    }
}

build.dependsOn buildZip