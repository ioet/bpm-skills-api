buildscript {
    ext {
        springBootVersion = '2.0.5.RELEASE'
    }
    repositories {
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath('gradle.plugin.com.palantir.gradle.docker:gradle-docker:0.13.0')
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'com.palantir.docker'
apply plugin: 'jacoco'
jacoco {
    toolVersion = '0.8.1'
}

group = 'com.ioet'
version = '0.0.1'
sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

ext {
    springCloudVersion = 'Finchley.SR1'
}

dependencies {
    compile 'com.github.derjust:spring-data-dynamodb:5.0.3'
    compile('org.springframework.boot:spring-boot-starter-web')
    runtime('org.springframework.boot:spring-boot-devtools')
    compileOnly('org.projectlombok:lombok')
    testCompile('org.springframework.boot:spring-boot-starter-test')
    compile 'io.springfox:springfox-swagger2:2.7.0'
    compile 'io.springfox:springfox-swagger-ui:2.7.0'
    compile('org.springframework.cloud:spring-cloud-starter-netflix-eureka-client')
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

jacocoTestReport {
    reports {
        xml.enabled = true
        html.enabled = true
    }
}

docker {
    name "enriquezrene/${jar.baseName}:${version}"
    files jar.archivePath
    buildArgs(['JAR_FILE': "${jar.archiveName}"])
}
